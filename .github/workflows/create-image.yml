# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CI Pipeline Build And Push Image

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: Crimson/employee-service

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
      actions: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean install -DskipTests
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.1.11
      with:
        versionSpec: '5.x'
        
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v3.1.11
      with:
        useConfigFile: true

    - name: Display GitVersion outputs
      run: |
        echo "SemVer: ${{ env.semVer }}"
        
    - name: Build container image
      run: docker build . -t  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.semVer }}

    - name: OCI image vulnerability scanning
      uses: anchore/scan-action@v6
      id: scan
      with:
        image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.semVer }}
        fail-build: true
        severity-cutoff: high
        output-format: sarif
  
    - name: Upload vulnerability report
      uses: github/codeql-action/upload-sarif@v3.28.4
      if: success() || failure()
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}

    - name: Log into container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.CR_GITHUB_TOKEN }}

    - name: Publish container image
      run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.semVer }}
